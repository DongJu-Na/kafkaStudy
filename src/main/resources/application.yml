spring:
  profiles:
    active: dev
  thymeleaf:
    prefix : classpath:templates/
    suffix : .html
    cache : false
  application:
    name: "kafka-study"
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: test
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop        # DB 초기화 전략 (none, create, create-drop, update, validate)
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
    add-properties: false
  thymeleaf:
    cache: false
server:
  port: "${port:8080}"


logging:
  level:
    com.kafkaStudy: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none        # DB 초기화 전략 (none, create, create-drop, update, validate)
  devtools:
    livereload:
      enabled: true
    add-properties: false
  thymeleaf:
    cache: false
server:
  port: "${port:8081}"

logging:
  level:
    com.kafkaStudy: DEBUG